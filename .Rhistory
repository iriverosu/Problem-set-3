sum(is.na(train2$new_surface))#32704
----------#1.2 imputacion missings con arboles
train2$city<-as.factor(train2$city)
x <- "[:space:]+[:digit:]+[:punct:]+[:digit:]+[:space:]+"
str_locate_all(string = train2$description , pattern = x) ## detect pattern
str_extract(string = train2$description , pattern= x) ## extrac pattern
train2 <- train2 %>%
mutate(new_surface = str_extract(string=description , pattern= x))
table(train2$new_surface) %>% sort() %>% head()
sum(is.na(train2$new_surface))
train2$new_surface<-as.numeric(train2$new_surface)
train2$new_surface<-(ifelse(train2$new_surface >30.15,train2$new_surface,NA))
train2$new_surface<-(ifelse((is.na(train2$surface_total)),train2$new_surface,train2$surface_total))
sum(is.na(train2$surface_total))#39044
sum(is.na(train2$new_surface))#37060
train2$new_surface<-(ifelse((is.na(train2$new_surface)),train2$surface_covered,train2$new_surface))
sum(is.na(train2$new_surface))#32704
train2$city<-as.factor(train2$city)
train2$property_type<-as.factor(train2$property_type)
train2$operation_type<-as.factor(train2$operation_type)
class(train2)
train3<-as.data.frame(train2)
train3<- train3 %>% select(city, surface_total,surface_covered,new_surface,rooms, bedrooms,bathrooms, property_type)
imp <- missForest(train3, verbose=TRUE, variablewise= TRUE)
imp$OOBerror #error que tiene
noNA<-as.data.frame(imp$ximp)
sum(is.na(noNA$new_surface))#0
train2<-cbind(train2,noNA$new_surface)
names(train2)
'surface_final'->names(train2)[names(train2)=='noNA.new_surface']
#2. Baños----------------------------------------------------------------------------------------------------
train2<-cbind(train2,noNA$bathrooms)
names(train2)
'bathrooms_final'->names(train2)[names(train2)=='noNA.bathrooms']
#Valores como enteros
train2<-train2 %>% select(-surface_total,-surface_covered,-rooms, -bathrooms, -title, -description, -operation_type, -new_surface)
View(retail_med)
train2 <- st_as_sf(x = train, ## datos
coords=c("lon","lat"), ## coordenadas
crs=4326) ## CRS
leaflet() %>% addTiles() %>% addCircleMarkers(data=train2)
names(train2)
x <- "[:space:]+[:digit:]+[:punct:]+[:digit:]+[:space:]+"
str_locate_all(string = train2$description , pattern = x) ## detect pattern
str_extract(string = train2$description , pattern= x) ## extrac pattern
train2 <- train2 %>%
mutate(new_surface = str_extract(string=description , pattern= x))
table(train2$new_surface) %>% sort() %>% head()
sum(is.na(train2$new_surface))
train2$new_surface<-as.numeric(train2$new_surface)
train2$new_surface<-(ifelse(train2$new_surface >30.15,train2$new_surface,NA))
train2$new_surface<-(ifelse((is.na(train2$surface_total)),train2$new_surface,train2$surface_total))
sum(is.na(train2$surface_total))#39044
sum(is.na(train2$new_surface))#37060
train2$new_surface<-(ifelse((is.na(train2$new_surface)),train2$surface_covered,train2$new_surface))
sum(is.na(train2$new_surface))#32704
train2$city<-as.factor(train2$city)
train2$property_type<-as.factor(train2$property_type)
train2$operation_type<-as.factor(train2$operation_type)
class(train2)
train3<-as.data.frame(train2)
train3<- train3 %>% select(city, surface_total,surface_covered,new_surface,rooms, bedrooms,bathrooms, property_type)
imp <- missForest(train3, verbose=TRUE, variablewise= TRUE)
imp$OOBerror #error que tiene
noNA<-as.data.frame(imp$ximp)
sum(is.na(noNA$new_surface))#0
train2<-cbind(train2,noNA$new_surface)
names(train2)
'surface_final'->names(train2)[names(train2)=='noNA.new_surface']
train2<-cbind(train2,noNA$bathrooms)
names(train2)
'bathrooms_final'->names(train2)[names(train2)=='noNA.bathrooms']
names(train2)
train2<-train2 %>% select(-surface_total)
train2<-train2 %>% select(-surface_covered)
train2<-train2 %>% select(-rooms)
train2<-train2 %>% select(-bathrooms, -title, -description, -operation_type, -new_surface)
train_medellin<-subset(train2,city=="Medellín")
train_bog<-subset(train2,city=="Bogotá D.C")
train_bog<-subset(train2,city=="Cali")
train_bog<-subset(train2,city=="Bogotá D.C")
train_cali<-subset(train2,city=="Cali")
View(train_bog)
View(train_medellin)
matrix_dist_uni_med <- st_distance(x=train_medellin , y=universidades_med)
matrix_dist_uni_med[1:5,1:5]
#Distancia al punto más cercano
min_dist_uni_med <- apply(matrix_dist_uni_med , 1 , min)
min_dist_uni_med %>% head()
#pegar a dataframe general
train_medellin$dist_uni = min_dist_uni_med
matrix_dist_col_med <- st_distance(x=train_medellin , y=colegios_med)
matrix_dist_col_med[1:5,1:5]
#Distancia al punto más cercano
min_dist_col_med <- apply(matrix_dist_col_med , 1 , min)
min_dist_col_med %>% head()
#pegar a dataframe general
train_medellin$dist_col = min_dist_col_med
matrix_dist_kin_med <- st_distance(x=train_medellin , y=kinder_med)
matrix_dist_kin_med[1:5,1:5]
#Distancia al punto más cercano
min_dist_kin_med <- apply(matrix_dist_kin_med , 1 , min)
min_dist_kin_med %>% head()
#pegar a dataframe general
train_medellin$dist_kin = min_dist_kin_med
matrix_dist_bus_med <- st_distance(x=train_medellin , y=bus_med)
matrix_dist_bus_med[1:5,1:5]
#Distancia al punto más cercano
min_dist_bus_med <- apply(matrix_dist_bus_med , 1 , min)
min_dist_bus_med %>% head()
#pegar a dataframe general
train_medellin$dist_bus = min_dist_bus_med
matrix_dist_vias_med <- st_distance(x=train_medellin , y=vias_med)
matrix_dist_vias_med[1:5,1:5]
#Distancia al punto más cercano
min_dist_vias_med <- apply(matrix_dist_vias_med , 1 , min)
min_dist_vias_med %>% head()
#pegar a dataframe general
train_medellin$dist_vias = min_dist_vias_med
#-------Dis
matrix_dist_off_med <- st_distance(x=train_medellin , y=office_med)
matrix_dist_off_med[1:5,1:5]
#Distancia al punto más cercano
min_dist_off_med <- apply(matrix_dist_off_med , 1 , min)
min_dist_off_med %>% head()
#pegar a dataframe general
train_medellin$dist_off = min_dist_off_med
matrix_dist_ind_med <- st_distance(x=train_medellin , y=industrial_med)
matrix_dist_ind_med[1:5,1:5]
#Distancia al punto más cercano
min_dist_ind_med <- apply(matrix_dist_ind_med , 1 , min)
min_dist_ind_med %>% head()
#pegar a dataframe general
train_medellin$dist_ind = min_dist_ind_med
matrix_dist_ret_med <- st_distance(x=train_medellin , y=retail_med)
matrix_dist_ret_med[1:5,1:5]
#Distancia al punto más cercano
min_dist_ret_med <- apply(matrix_dist_ret_med , 1 , min)
min_dist_ret_med %>% head()
#pegar a dataframe general
train_medellin$dist_ret = min_dist_ret_med
#-------Distancia universidades
train_bog<-subset(train2,city=="Bogotá D.C")
## Distancia a muchos puntos
matrix_dist_uni_bog <- st_distance(x=train_bog , y=universidades_bog)
matrix_dist_uni_bog[1:5,1:5]
#Distancia al punto más cercano
min_dist_uni_bog <- apply(matrix_dist_uni_bog , 1 , min)
min_dist_uni_bog %>% head()
#pegar a dataframe general
train_bog$dist_uni = min_dist_uni_bog
#-------Distancia colegios
## Distancia a muchos puntos
matrix_dist_col_bog <- st_distance(x=train_bog , y=colegios_bog)
matrix_dist_col_bog[1:5,1:5]
#Distancia al punto más cercano
min_dist_col_bog <- apply(matrix_dist_col_bog , 1 , min)
min_dist_col_bog %>% head()
#pegar a dataframe general
train_bog$dist_col = min_dist_col_bog
#-------Distancia kindergarden
## Distancia a muchos puntos
matrix_dist_kin_bog <- st_distance(x=train_bog , y=kinder_bog)
matrix_dist_kin_bog[1:5,1:5]
#Distancia al punto más cercano
min_dist_kin_bog <- apply(matrix_dist_kin_bog , 1 , min)
min_dist_kin_bog %>% head()
#pegar a dataframe general
train_bog$dist_kin = min_dist_kin_bog
#-------Distancia estaciones de bus
## Distancia a muchos puntos
matrix_dist_bus_bog <- st_distance(x=train_bog , y=bus_bog)
matrix_dist_bus_bog[1:5,1:5]
#Distancia al punto más cercano
min_dist_bus_bog <- apply(matrix_dist_bus_bog , 1 , min)
min_dist_bus_bog %>% head()
#pegar a dataframe general
train_bog$dist_bus = min_dist_bus_bog
#-------Distancia vías principales
## Distancia a muchos puntos
matrix_dist_vias_bog <- st_distance(x=train_bog , y=vias_bog)
matrix_dist_vias_bog[1:5,1:5]
#Distancia al punto más cercano
min_dist_vias_bog <- apply(matrix_dist_vias_bog , 1 , min)
min_dist_vias_bog %>% head()
#pegar a dataframe general
train_bog$dist_vias = min_dist_vias_bog
#-------Distancia office
## Distancia a muchos puntos
matrix_dist_off_bog <- st_distance(x=train_bog , y=office_bog)
matrix_dist_off_bog[1:5,1:5]
#Distancia al punto más cercano
min_dist_off_bog <- apply(matrix_dist_off_bog , 1 , min)
min_dist_off_bog %>% head()
#pegar a dataframe general
train_bog$dist_off = min_dist_off_bog
#-------Distancia Industrial
## Distancia a muchos puntos
matrix_dist_ind_bog <- st_distance(x=train_bog , y=industrial_bog)
matrix_dist_ind_bog[1:5,1:5]
#Distancia al punto más cercano
min_dist_ind_bog <- apply(matrix_dist_ind_bog , 1 , min)
min_dist_ind_bog %>% head()
#pegar a dataframe general
train_bog$dist_ind = min_dist_ind_bog
## Distancia a muchos puntos
matrix_dist_ret_bog <- st_distance(x=train_bog , y=retail_bog)
matrix_dist_ret_bog[1:5,1:5]
#Distancia al punto más cercano
min_dist_ret_bog <- apply(matrix_dist_ret_bog , 1 , min)
min_dist_ret_bog %>% head()
#pegar a dataframe general
train_bog$dist_ret = min_dist_ret_bog
View(train_bog)
matrix_dist_uni_cali <- st_distance(x=test , y=universidades_cali)
st_crs(test) == st_crs(universidades_cali)
st_crs(test)
test <- st_as_sf(x = test, ## datos
coords=c("lon","lat"), ## coordenadas
crs=4326) ## CRS
leaflet() %>% addTiles() %>% addCircleMarkers(data=test)
names(test)
x <- "[:space:]+[:digit:]+[:punct:]+[:digit:]+[:space:]+"
str_locate_all(string = test$description , pattern = x) ## detect pattern
str_extract(string = test$description , pattern= x) ## extrac pattern
test <- test %>%
mutate(new_surface = str_extract(string=description , pattern= x))
table(test$new_surface) %>% sort() %>% head()
sum(is.na(test$new_surface))
test$new_surface<-as.numeric(test$new_surface)
test$new_surface<-(ifelse(test$new_surface >30.15,test$new_surface,NA))
View(test)
test$new_surface<-(ifelse((is.na(test$surface_total)),test$new_surface,test$surface_total))
sum(is.na(test$surface_total))#39044
sum(is.na(test$new_surface))#37060
train2$new_surface<-(ifelse((is.na(test$new_surface)),test$surface_covered,test$new_surface))
test$new_surface<-(ifelse((is.na(test$surface_total)),test$new_surface,test$surface_total))
sum(is.na(test$surface_total))#39044
sum(is.na(test$new_surface))#37060
train2$new_surface<-(ifelse((is.na(test$new_surface)),test$surface_covered,test$new_surface))
test$new_surface<-(ifelse((is.na(test$new_surface)),test$surface_covered,test$new_surface))
sum(is.na(test$new_surface))#32704
test$city<-as.factor(test$city)
test$property_type<-as.factor(test$property_type)
test$operation_type<-as.factor(test$operation_type)
class(test)
test2<-as.data.frame(test)
test2<- test %>% select(city, surface_total,surface_covered,new_surface,rooms, bedrooms,bathrooms, property_type)
imp <- missForest(test2, verbose=TRUE, variablewise= TRUE)
imp2 <- missForest(test2, verbose=TRUE, variablewise= TRUE)
View(test2)
x <- "[:space:]+[:digit:]+[:punct:]+[:digit:]+[:space:]+"
str_locate_all(string = test$description , pattern = x) ## detect pattern
str_extract(string = test$description , pattern= x) ## extrac pattern
test <- test %>%
mutate(new_surface = str_extract(string=description , pattern= x))
table(test$new_surface) %>% sort() %>% head()
sum(is.na(test$new_surface))
test$new_surface<-as.numeric(test$new_surface)
test$new_surface<-(ifelse(test$new_surface >30.15,test$new_surface,NA))
test$new_surface<-(ifelse((is.na(test$surface_total)),test$new_surface,test$surface_total))
sum(is.na(test$surface_total))#3146
sum(is.na(test$new_surface))#3005
test$new_surface<-(ifelse((is.na(test$new_surface)),test$surface_covered,test$new_surface))
sum(is.na(test$new_surface))#2723
test$city<-as.factor(test$city)
test$property_type<-as.factor(test$property_type)
test$operation_type<-as.factor(test$operation_type)
class(test)
test2<-as.data.frame(test)
test2<- test %>% select(city, surface_total,surface_covered,new_surface,rooms, bedrooms,bathrooms, property_type)
imp2 <- missForest(test2, verbose=TRUE, variablewise= TRUE)
test2<-as.data.frame(test)
imp2 <- missForest(test2, verbose=TRUE, variablewise= TRUE)
test2<-as.data.frame(test)
test2<- test %>% select(city, surface_total,surface_covered,new_surface,rooms, bedrooms,bathrooms, property_type)
test2<-as.data.frame(test2)
imp2 <- missForest(test2, verbose=TRUE, variablewise= TRUE)
View(train3)
class(test)
test2<-as.data.frame(test)
test2<- test %>% select(city, surface_total,surface_covered,new_surface,rooms, bedrooms,bathrooms, property_type)
test2<-as.data.frame(test2)
test2<- test2 %>% select(city, surface_total,surface_covered,new_surface,rooms, bedrooms,bathrooms, property_type)
test2<-as.data.frame(test)
test2<-as.data.frame(test2)
test2<- test2 %>% select(city, surface_total,surface_covered,new_surface,rooms, bedrooms,bathrooms, property_type)
imp2 <- missForest(test2, verbose=TRUE, variablewise= TRUE)
imp2$OOBerror #error que tiene
noNA<-as.data.frame(imp2$ximp)
sum(is.na(noNA$new_surface))#0
test<-cbind(test,noNA$new_surface)
names(test)
'surface_final'->names(train2)[names(train2)=='noNA.new_surface']
names(test)
'surface_final'->names(test)[names(test)=='noNA.new_surface']
names(test)
test<-cbind(test,noNA$bathrooms)
names(test)
'bathrooms_final'->names(test)[names(test)=='noNA.bathrooms']
names(test)
test<-test %>% select(-surface_total,-surface_covered,-rooms, -bathrooms, -title, -description, -operation_type, -new_surface)
matrix_dist_uni_cali <- st_distance(x=test , y=universidades_cali)
matrix_dist_uni_cali[1:5,1:5]
min_dist_uni_cali <- apply(matrix_dist_uni_cali , 1 , min)
min_dist_uni_cali%>% head()
test$dist_uni = min_dist_uni_cali
matrix_dist_col_cali <- st_distance(x=test , y=colegios_cali)
matrix_dist_col_cali[1:5,1:5]
#Distancia al punto más cercano
min_dist_col_cali <- apply(matrix_dist_col_cali , 1 , min)
min_dist_col_cali%>% head()
#pegar a dataframe general
test$dist_col = min_dist_col_cali
matrix_dist_kin_cali <- st_distance(x=test , y=kinder_cali)
matrix_dist_kin_cali[1:5,1:5]
#Distancia al punto más cercano
min_dist_kin_cali <- apply(matrix_dist_kin_cali , 1 , min)
min_dist_kin_cali %>% head()
#pegar a dataframe general
test$dist_kin = min_dist_kin_cali
matrix_dist_bus_cali <- st_distance(x=test , y=bus_cali)
matrix_dist_bus_cali[1:5,1:5]
#Distancia al punto más cercano
min_dist_bus_cali <- apply(matrix_dist_bus_cali , 1 , min)
min_dist_bus_cali%>% head()
#pegar a dataframe general
test$dist_bus = min_dist_bus_cali
matrix_dist_vias_cali <- st_distance(x=train_cali , y=vias_cali)
matrix_dist_vias_cali[1:5,1:5]
matrix_dist_vias_cali <- st_distance(x=test , y=vias_cali)
matrix_dist_vias_cali[1:5,1:5]
#Distancia al punto más cercano
min_dist_vias_cali <- apply(matrix_dist_kin_cali , 1 , min)
min_dist_vias_cali%>% head()
#pegar a dataframe general
test$dist_vias = min_dist_vias_cali
matrix_dist_off_cali <- st_distance(x=test , y=office_cali)
matrix_dist_off_cali[1:5,1:5]
#Distancia al punto más cercano
min_dist_off_cali <- apply(matrix_dist_off_cali , 1 , min)
min_dist_off_cali %>% head()
#pegar a dataframe general
test$dist_off = min_dist_off_cali
## Distancia a muchos puntos
matrix_dist_ind_cali <- st_distance(x=test, y=industrial_cali)
matrix_dist_ind_cali[1:5,1:5]
#Distancia al punto más cercano
min_dist_ind_cali<- apply(matrix_dist_ind_cali , 1 , min)
min_dist_ind_cali %>% head()
#pegar a dataframe general
test$dist_ind = min_dist_ind_cali
matrix_dist_ret_cali <- st_distance(x=test , y=retail_cali)
matrix_dist_ret_cali[1:5,1:5]
#Distancia al punto más cercano
min_dist_ret_cali <- apply(matrix_dist_ret_cali , 1 , min)
min_dist_ret_cali %>% head()
#pegar a dataframe general
test$dist_ret = min_dist_ret_cali
#-------Dis
rm(administrative)
rm(Bogota)
rm(bus_bog)
rm(bus_cali)
rm(bus_med)
rm(Cali)
rm(Medellin)
rm(colegios_bog)
rm(colegios_cali)
rm(colegios_med)
rm(imp)
rm(imp2)
rm(industrial_bog)
rm(industrial_cali)
rm(industrial_med)
rm(kinder_bog)
rm(kinder_cali)
rm(kinder_med)
rm(metro_med)
rm(office_bog)
rm(office_cali)
rm(office_med)
rm(osm)
rm(osm_sfp2)
rm(osm_p2)
rm(osm_sfp3)
rm(osm_p3)
rm(osm_sfp)
rm(osm_p)
rm(osm_sf)
rm(osm_sf10)
rm(osm_sf11)
rm(osm_sf12)
rm(osm_sf13)
rm(osm_sf14)
rm(osm_sf15)
rm(osm_sf16)
rm(osm_sf17)
rm(osm_sf18)
rm(osm_sf19)
rm(osm_sf20)
rm(osm_sf2)
rm(osm_sf21)
rm(osm_sf22)
rm(osm_sf23)
rm(osm_sf24)
rm(osm_sf25)
rm(osm_sf26)
rm(osm_sf3)
rm(osm_sf4)
rm(osm_sf5)
rm(osm_sf6)
rm(osm_sf7)
rm(osm_sf8)
rm(osm_sf9)
rm(osm10)
rm(osm11)
rm(osm12)
rm(osm13)
rm(osm14)
rm(osm15)
rm(osm16)
rm(osm17)
rm(osm18)
rm(osm19)
rm(osm2)
rm(osm20)
rm(osm21)
rm(osm22)
rm(osm23)
rm(osm24)
rm(osm25)
rm(osm26)
rm(osm3)
rm(osm4)
rm(osm5)
rm(osm6)
rm(osm7)
rm(osm8)
rm(osm9)
rm(retail_bog)
rm(retail_cali)
rm(retail_med)
rm(test2)
rm(train)
rm(train2)
rm(train3)
rm(universidades_bog)
rm(universidades_med)
rm(universidades_cali)
rm(vias_bog)
rm(vias_med)
rm(vias_cali)
rm(noNA)
rm(matrix_dist_cai_cali)
rm(matrix_dist_cai_bog)
rm(matrix_dist_cai_med)
rm(matrix_dist_bus_bog)
rm(matrix_dist_bus_med)
rm(matrix_dist_bus_cali)
rm(matrix_dist_col_bog)
rm(matrix_dist_col_med)
rm(matrix_dist_col_cali)
rm(matrix_dist_ind_bog)
rm(matrix_dist_ind_med)
rm(matrix_dist_ind_cali)
rm(matrix_dist_kin_bog)
rm(matrix_dist_kin_med)
rm(matrix_dist_kin_cali)
rm(matrix_dist_off_bog)
rm(matrix_dist_off_med)
rm(matrix_dist_off_cali)
rm(matrix_dist_ret_bog)
rm(matrix_dist_ret_med)
rm(matrix_dist_ret_cali)
rm(matrix_dist_uni_bog)
rm(matrix_dist_uni_med)
rm(matrix_dist_uni_cali)
rm(matrix_dist_vias_bog)
rm(matrix_dist_vias_med)
rm(matrix_dist_vias_cali)
rm(min_dist_cai_cali)
rm(min_dist_cai_bog)
rm(min_dist_cai_med)
rm(min_dist_bus_bog)
rm(min_dist_bus_med)
rm(min_dist_bus_cali)
rm(min_dist_col_bog)
rm(min_dist_col_med)
rm(min_dist_col_cali)
rm(min_dist_ind_bog)
rm(min_dist_ind_med)
rm(min_dist_ind_cali)
rm(min_dist_kin_bog)
rm(min_dist_kin_med)
rm(min_dist_kin_cali)
rm(min_dist_off_bog)
rm(min_dist_off_med)
rm(min_dist_off_cali)
rm(min_dist_ret_bog)
rm(min_dist_ret_med)
rm(min_dist_ret_cali)
rm(min_dist_uni_bog)
rm(min_dist_uni_med)
rm(min_dist_uni_cali)
rm(min_dist_vias_bog)
rm(min_dist_vias_med)
rm(min_dist_vias_cali)
rm(x)
rm(train_cali)
save.image("~/Documents/GitHub/Problem-set-3/bases depuradas.RData")
rm(train_cali)
